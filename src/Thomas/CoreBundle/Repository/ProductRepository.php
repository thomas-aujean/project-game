<?php

namespace Thomas\CoreBundle\Repository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{

    public function findProducts($category = null, $brand = null, $system = null, $name = null)
    {


        $qb = $this->createQueryBuilder('p');
        
        if ($category) {
            $qb
                ->andWhere('p.productCategory = :category')
                ->setParameter('category', $category)
            ;
        }
        if ($brand) {
            $qb
                ->andWhere('p.brand = :brand')
                ->setParameter('brand', $brand)
            ;
        }
        if ($system) {
            $qb
                ->andWhere('p.system = :system')
                ->setParameter('system', $system)
            ;
        }

        if ($name) {
            $qb
                ->andWhere('p.name like :name')
                ->setParameter('name', '%'.$name.'%')
            ;
        }

        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function findGames($system = null, $name = null)
    {
        $qb = $this->createQueryBuilder('p');
        $qb
            ->where('p.productCategory = 1')
        ;
        if ($system) {
            $qb
                ->andWhere('p.system = :system')
                ->setParameter('system', $system)
            ;
        }

        if ($name) {
            $qb
                ->andWhere('p.name like :name')
                ->setParameter('name', '%'.$name.'%')
            ;
        }

        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function findSystems($brand = null)
    {
        $qb = $this->createQueryBuilder('p');
        $qb
            ->where('p.productCategory = 2')
        ;

        if ($brand) {
            $qb
                ->andWhere('p.brand = :brand')
                ->setParameter('brand', $brand)
            ;
        }

        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function findAccess()
    {
        $qb = $this->createQueryBuilder('p');

        // On peut ajouter ce qu'on veut avant
        $qb
            ->where('p.productCategory = 3')
        ;
        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function search($string)
    {
        $qb = $this->createQueryBuilder('p');

        // On peut ajouter ce qu'on veut avant
        $qb
            ->where('p.productCategory = 3')
        ;
        return $qb
            ->getQuery()
            ->getResult()
        ;
    }
}
